package com.openclassrooms.realestatemanager.ui.real_estate_creation

import androidx.lifecycle.MutableLiveData
import androidx.lifecycle.ViewModel
import androidx.lifecycle.viewModelScope
import com.openclassrooms.realestatemanager.R
import com.openclassrooms.realestatemanager.db.RealEstateAdWithPhotoDAO
import com.openclassrooms.realestatemanager.model.RealEstateAdEntity
import kotlinx.coroutines.Dispatchers
import kotlinx.coroutines.launch
import kotlinx.coroutines.withContext

class RealEstateCreationViewModel(
    private val realEstateAdWithPhotoDAO: RealEstateAdWithPhotoDAO
) : ViewModel() {

    val liveDataViewAction = MutableLiveData<RealEstateCreationViewAction>()

    sealed class RealEstateCreationViewAction {
        object CloseActivity: RealEstateCreationViewAction()
        data class DisplayToast(val messageResId: Int): RealEstateCreationViewAction()
    }

    fun createRealEstate(
        realEstateType: String?,
        realEstatePrice: String?,
        realEstateSurface: String?,
        realEstateDescription: String?,
        interestPoint: String?,
        realEstateIsSold: Boolean,
        realEstateEntryDate: String?,
        realEstateExitDate: String?,
        realEstateAgent: String?,
        realEstateRoad: String?,
        realEstateHouseNumber: String?,
        realEstateTown: String?,
        realEstatePostalCode: String?,
        realEstateCountry: String?,
        realEstateTotalRoomNumber: String?,
        realEstateBedroomNumber: String?,
        realEstateBathroomNumber: String?
    ) {
        val realEstatePriceParsed = realEstatePrice?.toFloatOrNull()
        if(realEstatePriceParsed == null) {
            liveDataViewAction.value = RealEstateCreationViewAction.DisplayToast(R.string.error_incorrect_price)
            return
        }
        if(realEstateType == null) {
            liveDataViewAction.value = RealEstateCreationViewAction.DisplayToast(R.string.error_incorrect_price)
            return
        }
        viewModelScope.launch(Dispatchers.IO) {
            // TODO Si besoin la primary key autogenerated se récupère comme ça
            val realEstateId = realEstateAdWithPhotoDAO.saveRealEstateAd(
                RealEstateAdEntity(
                    realEstateType = realEstateType,
                    realEstatePrice = realEstatePriceParsed
                )
            )

            withContext(Dispatchers.Main) {
                liveDataViewAction.value = RealEstateCreationViewAction.CloseActivity
            }
        }
    }
}